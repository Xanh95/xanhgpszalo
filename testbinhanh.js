import { Zalo, ThreadType } from "zca-js";
import { run_vietmap } from "./vietmap.js";
import { run_binhanh } from "./binhanh.js";
import path from "path";
import { Builder, By, Key, until } from "selenium-webdriver";
import firefox from "selenium-webdriver/firefox.js";
import fs from "node:fs/promises";
const binhanh = {
  "29H76446": "487452",
  "29H76366": "485798",
  "29H76494": "487423",
  "29LD31574": "476945",
  "29H76466": "489205",
  "29E15073": "633109",
};
// h√†m format th·ªùi gian
function formatTimeFromSeconds(seconds) {
  if (seconds == null) return "N/A";
  let h = Math.floor(seconds / 3600);
  let m = Math.floor((seconds % 3600) / 60);
  let s = seconds % 60;
  return `${h} Gi·ªù ${m} Ph√∫t ${s} Gi√¢y`;
}
// üëâ H√†m ki·ªÉm tra th·ªùi gian binh anh
async function check_time_binhanh(api) {
  // C·∫•u h√¨nh Firefox
  let options = new firefox.Options();
  options.addArguments("--headless"); // B·ªè comment n·∫øu mu·ªën ch·∫°y ·∫©n

  let driver = await new Builder()
    .forBrowser("firefox")
    .setFirefoxOptions(options)
    .build();

  try {
    // Ch·ªânh c·ª≠a s·ªï 1920x1080
    // await driver.manage().window().setRect({ width: 1920, height: 1080 });

    // M·ªü trang web
    await driver.get("https://gps.binhanh.vn/Default.aspx");

    // Ch·ªù t·ªëi ƒëa 10 gi√¢y cho √¥ nh·∫≠p UserName
    let searchUsername = await driver.wait(
      until.elementLocated(By.name("UserLogin1$txtLoginUserName")),
      10000
    );
    console.log("ƒê√£ t√¨m th·∫•y √¥ UserName!");

    let inpPas = await driver.findElement(
      By.name("UserLogin1$txtLoginPassword")
    );
    let inpLogin = await driver.findElement(By.name("UserLogin1$btnLogin"));

    await searchUsername.sendKeys("tvhoaphat");
    await inpPas.sendKeys("12341234");
    await driver.sleep(500);
    await inpLogin.click();

    console.log("‚úÖ ƒê√£ ƒëƒÉng nh·∫≠p, ƒëang ch·ªù trang load xong...");

    // Ch·ªù trang load ho√†n t·∫•t sau khi ƒëƒÉng nh·∫≠p
    await driver.wait(async () => {
      let state = await driver.executeScript("return document.readyState");
      return state === "complete";
    }, 10000);

    console.log("‚úÖ Trang ƒë√£ load xong, ti·∫øp t·ª•c...");
    // v√≤ng l·∫∑p ki·ªÉm tra t·ª´ng xe binh anh
    // L·∫•y th√¥ng tin status. Ch·ªù ƒë·∫øn khi window.statuses["vec_xxx"] c√≥ gi√° tr·ªã
    // b∆∞·ªõc 1 + b∆∞·ªõc 2: t·∫°o instance n·∫øu ch∆∞a c√≥
    await driver.executeScript(`
      if (!window.onlineViewData) {
          window.onlineViewData = new OnlineViewData();
          console.log("ƒê√£ t·∫°o OnlineViewData m·ªõi");
      }
    `);

    // b∆∞·ªõc 3: g·ªçi h√†m l·∫•y danh s√°ch xe
    await driver.executeScript(`window.onlineViewData.getListVehicle();`);

    // L·∫•y danh s√°ch xe (callback -> Promise ƒë·ªÉ tr·∫£ v·ªÅ Node)
    let listVehicle = await driver.executeAsyncScript(function (callback) {
      window.onlineViewData.getListVehicleProto(function (listVehicle) {
        callback(listVehicle); // tr·∫£ k·∫øt qu·∫£ v·ªÅ Node.js
      });
    });

    for (let [plate, carId] of Object.entries(binhanh)) {
      try {
        // T√¨m xe c√≥ id = 485798
        let value = listVehicle.find((v) => v.id === Number(carId));
        // console.log("Xe t√¨m ƒë∆∞·ª£c:", value);
        if (!value) {
          console.log(`‚ö†Ô∏è Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu cho xe ${plate}`);
          continue;
        }

        let continuous = value.bgt.t_continus * 60;
        let daily = value.bgt.t_day * 60;
        let weekly = value.bgt.minute_week * 60;
        // continuous = 12600; // Gi·∫£ s·ª≠ gi√° tr·ªã n√†y l√† 12600 gi√¢y (3.5 gi·ªù)
        // daily = 28800; // Gi·∫£ s·ª≠ gi√° tr·ªã n√†y l√† 28800 gi√¢y (8 gi·ªù)
        // weekly = 165600; // Gi·∫£ s·ª≠ gi√° tr·ªã n√†y l√† 165600 gi√¢y (46 gi·ªù)

        console.log(`\nüìå Xe ${plate}:`);
        console.log(" - L√°i li√™n t·ª•c:", formatTimeFromSeconds(continuous));
        console.log(" - L√°i trong ng√†y:", formatTimeFromSeconds(daily));
        console.log(" - L√°i trong tu·∫ßn:", formatTimeFromSeconds(weekly));

        //  Ki·ªÉm tra qu√° gi·ªõi h·∫°n ontinuous > 14400 || daily > 36000 || weekly > 172800
        // C·∫£nh b√°o n·∫øu l√°i li√™n t·ª•c qu√° 4 gi·ªù
        if (continuous > 14400) {
          const records = await loadWarningRecords();
          const arr = records[plate];
          if (Array.isArray(arr)) {
            const existing = arr.find(
              (kieu_vi_pham) => kieu_vi_pham.type === "over_4h"
            );
            if (
              existing !== undefined &&
              Date.now() - existing.time <= 14400 * 1000
            ) {
              console.log("ƒê√£ c·∫£nh b√°o type 'over_4h' tr∆∞·ªõc ƒë√≥ t·∫°i:");
            } else {
              console.log("Ch∆∞a t·ª´ng c·∫£nh b√°o 'over_4h' cho xe n√†y.");
              await saveWarningRecord(plate, "over_4h");
              await sendTextToUser(
                api,
                zalo_id[plate],
                `Xe ${plate} ƒë√£ l√°i li√™n t·ª•c qu√° 4 gi·ªù!`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `c√≥ th·ªÉ xem th√¥ng tin th·ªùi gian l√°i xe b·∫±ng c√°ch nh·∫Øn tin " th√¥ng tin xe ${plate}"`
              );
              console.log("ƒê√£ g·ª≠i c·∫£nh b√°o 'over_4h' cho xe:", plate);
            }
          } else {
            console.log("Ch∆∞a c√≥ record n√†o cho bi·ªÉn s·ªë n√†y.");
            await saveWarningRecord(plate, "over_4h");
            await sendTextToUser(
              api,
              zalo_id[plate],
              `Xe ${plate} ƒë√£ l√°i li√™n t·ª•c qu√° 4 gi·ªù!`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `c√≥ th·ªÉ xem th√¥ng tin th·ªùi gian l√°i xe b·∫±ng c√°ch nh·∫Øn tin " th√¥ng tin xe ${plate}"`
            );
            console.log("ƒê√£ g·ª≠i c·∫£nh b√°o 'over_4h' cho xe:", plate);
          }
        }
        // C·∫£nh b√°o n·∫øu l√°i trong ng√†y qu√° 10 gi·ªù
        if (daily > 36000) {
          // 10h = 36000 gi√¢y
          const records = await loadWarningRecords();
          const arr = records[plate];

          if (Array.isArray(arr)) {
            const existing = arr.find(
              (kieu_vi_pham) => kieu_vi_pham.type === "over_10h"
            );

            if (
              existing !== undefined &&
              new Date(existing.time).toDateString() ===
                new Date().toDateString()
            ) {
              // ƒê√£ c·∫£nh b√°o trong c√πng 1 ng√†y
              console.log(
                "ƒê√£ c·∫£nh b√°o type 'over_10h' cho xe n√†y h√¥m nay t·∫°i:",
                new Date(existing.time).toLocaleString()
              );
            } else {
              // Ch∆∞a c√≥ ho·∫∑c kh√°c ng√†y -> c·∫£nh b√°o m·ªõi
              console.log("Ch∆∞a t·ª´ng c·∫£nh b√°o 'over_10h' cho xe n√†y h√¥m nay.");
              await saveWarningRecord(plate, "over_10h");
              await sendTextToUser(
                api,
                zalo_id[plate],
                `Xe ${plate} ƒë√£ l√°i trong ng√†y qu√° 10 gi·ªù!`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `c√≥ th·ªÉ xem th√¥ng tin th·ªùi gian l√°i xe b·∫±ng c√°ch nh·∫Øn tin "th√¥ng tin xe ${plate}"`
              );
              console.log("ƒê√£ g·ª≠i c·∫£nh b√°o 'over_10h' cho xe:", plate);
            }
          } else {
            // Ch∆∞a c√≥ record n√†o
            console.log("Ch∆∞a c√≥ record n√†o cho bi·ªÉn s·ªë n√†y.");
            await saveWarningRecord(plate, "over_10h");
            await sendTextToUser(
              api,
              zalo_id[plate],
              `Xe ${plate} ƒë√£ l√°i trong ng√†y qu√° 10 gi·ªù!`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `c√≥ th·ªÉ xem th√¥ng tin th·ªùi l√°i xe b·∫±ng c√°ch nh·∫Øn tin "th√¥ng tin xe ${plate}"`
            );
            console.log("ƒê√£ g·ª≠i c·∫£nh b√°o 'over_10h' cho xe:", plate);
          }
        }
        // C·∫£nh b√°o n·∫øu l√°i trong tu·∫ßn qu√° 48 gi·ªù
        if (weekly > 172800) {
          // 172800 gi√¢y = 48h
          const records = await loadWarningRecords();
          const arr = records[plate];
          const thisWeek = getWeekNumber(new Date());
          const thisYear = new Date().getFullYear();

          if (Array.isArray(arr)) {
            const existing = arr.find((r) => r.type === "over_48h_week");
            if (
              existing !== undefined &&
              getWeekNumber(new Date(existing.time)) === thisWeek &&
              new Date(existing.time).getFullYear() === thisYear
            ) {
              console.log(
                `ƒê√£ c·∫£nh b√°o 'over_48h_week' trong tu·∫ßn ${thisWeek} r·ªìi.`
              );
            } else {
              console.log(
                `Ch∆∞a c·∫£nh b√°o 'over_48h_week' trong tu·∫ßn ${thisWeek}.`
              );
              await saveWarningRecord(plate, "over_48h_week");
              await sendTextToUser(
                api,
                zalo_id[plate],
                `Xe ${plate} ƒë√£ l√°i xe qu√° 48 gi·ªù trong tu·∫ßn!`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `Th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `c√≥ th·ªÉ xem th√¥ng tin th·ªùi gian l√°i xe b·∫±ng c√°ch nh·∫Øn tin "th√¥ng tin xe ${plate}"`
              );
              console.log("ƒê√£ g·ª≠i c·∫£nh b√°o 'over_48h_week' cho xe:", plate);
            }
          } else {
            console.log("Ch∆∞a c√≥ record n√†o cho bi·ªÉn s·ªë n√†y.");
            await saveWarningRecord(plate, "over_48h_week");
            await sendTextToUser(
              api,
              zalo_id[plate],
              `Xe ${plate} ƒë√£ l√°i xe qu√° 48 gi·ªù trong tu·∫ßn!`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `Th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `c√≥ th·ªÉ xem th√¥ng tin th·ªùi gian l√°i xe b·∫±ng c√°ch nh·∫Øn tin "th√¥ng tin xe ${plate}"`
            );
            console.log("ƒê√£ g·ª≠i c·∫£nh b√°o 'over_48h_week' cho xe:", plate);
          }
        }
        // 46h = 165600 gi√¢y, 48h = 172800 gi√¢y
        if (weekly >= 165600 && weekly < 172800) {
          const records = await loadWarningRecords();
          const arr = records[plate];
          const thisWeek = getWeekNumber(new Date());
          const thisYear = new Date().getFullYear();

          if (Array.isArray(arr)) {
            const existing = arr.find((r) => r.type === "near_48h_week");
            if (
              existing !== undefined &&
              getWeekNumber(new Date(existing.time)) === thisWeek &&
              new Date(existing.time).getFullYear() === thisYear
            ) {
              console.log(
                `ƒê√£ c·∫£nh b√°o 'near_48h_week' trong tu·∫ßn ${thisWeek} r·ªìi.`
              );
            } else {
              console.log(
                `Ch∆∞a c·∫£nh b√°o 'near_48h_week' trong tu·∫ßn ${thisWeek}.`
              );
              await saveWarningRecord(plate, "near_48h_week");
              await sendTextToUser(
                api,
                zalo_id[plate],
                `Xe ${plate} ƒë√£ l√°i xe g·∫ßn 48 gi·ªù (‚â•46h v√† <48h) trong tu·∫ßn!`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `Th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `c√≥ th·ªÉ xem th√¥ng tin th·ªùi gian l√°i xe b·∫±ng c√°ch nh·∫Øn tin "th√¥ng tin xe ${plate}"`
              );
              console.log("ƒê√£ g·ª≠i c·∫£nh b√°o 'near_48h_week' cho xe:", plate);
            }
          } else {
            console.log("Ch∆∞a c√≥ record n√†o cho bi·ªÉn s·ªë n√†y.");
            await saveWarningRecord(plate, "near_48h_week");
            await sendTextToUser(
              api,
              zalo_id[plate],
              `Xe ${plate} ƒë√£ l√°i xe g·∫ßn 48 gi·ªù (‚â•46h v√† <48h) trong tu·∫ßn!`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `Th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `c√≥ th·ªÉ xem th√¥ng tin th·ªùi gian l√°i xe b·∫±ng c√°ch nh·∫Øn tin "th√¥ng tin xe ${plate}"`
            );
            console.log("ƒê√£ g·ª≠i c·∫£nh b√°o 'near_48h_week' cho xe:", plate);
          }
        }

        // G·∫ßn 4h li√™n t·ª•c (>= 3h = 10800)
        if (continuous >= 12600 && continuous < 14400) {
          const records = await loadWarningRecords();
          const arr = records[plate];
          if (Array.isArray(arr)) {
            const existing = arr.find((r) => r.type === "near_4h");
            if (
              existing !== undefined &&
              Date.now() - existing.time <= 14400 * 1000
            ) {
              console.log(
                "ƒê√£ c·∫£nh b√°o 'near_4h' cho xe n√†y trong v√≤ng 4 ti·∫øng."
              );
            } else {
              console.log("Ch∆∞a c·∫£nh b√°o 'near_4h' trong v√≤ng 4 ti·∫øng.");
              await saveWarningRecord(plate, "near_4h");
              await sendTextToUser(
                api,
                zalo_id[plate],
                `Xe ${plate} ƒë√£ l√°i xe 3 ti·∫øng g·∫ßn 4h li√™n t·ª•c!`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `Th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `c√≥ th·ªÉ xem th√¥ng tin th·ªùi gian l√°i xe b·∫±ng c√°ch nh·∫Øn tin "th√¥ng tin xe ${plate}"`
              );
            }
          } else {
            await saveWarningRecord(plate, "near_4h");
            await sendTextToUser(
              api,
              zalo_id[plate],
              `Xe ${plate} ƒë√£ l√°i xe 3 ti·∫øng g·∫ßn 4h li√™n t·ª•c!`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `Th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `c√≥ th·ªÉ xem th√¥ng tin th·ªùi gian l√°i xe b·∫±ng c√°ch nh·∫Øn tin "th√¥ng tin xe ${plate}"`
            );
          }
        }
        // G·∫ßn 10h trong ng√†y (>= 8h = 28800s, < 10h = 36000s)
        if (daily >= 28800 && daily < 36000) {
          const records = await loadWarningRecords();
          const arr = records[plate];
          if (Array.isArray(arr)) {
            const existing = arr.find((r) => r.type === "near_10h");
            if (
              existing &&
              new Date(existing.time).toDateString() ===
                new Date().toDateString()
            ) {
              console.log("ƒê√£ c·∫£nh b√°o 'near_10h' cho xe n√†y h√¥m nay.");
            } else {
              console.log("Ch∆∞a c·∫£nh b√°o 'near_10h' h√¥m nay ‚Üí g·ª≠i c·∫£nh b√°o.");
              await saveWarningRecord(plate, "near_10h");
              await sendTextToUser(
                api,
                zalo_id[plate],
                `Xe ${plate} ƒë√£ l√°i xe 8 ti·∫øng g·∫ßn 10h trong ng√†y!`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `Th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
              );
              await sendTextToUser(
                api,
                zalo_id[plate],
                `c√≥ th·ªÉ xem th√¥ng tin th·ªùi gian l√°i xe b·∫±ng c√°ch nh·∫Øn tin "th√¥ng tin xe ${plate}"`
              );
            }
          } else {
            await saveWarningRecord(plate, "near_10h");
            await sendTextToUser(
              api,
              zalo_id[plate],
              `Xe ${plate} ƒë√£ l√°i xe 8 ti·∫øng  g·∫ßn 10h trong ng√†y!`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `Th·ªùi gian ki·ªÉm tra: ${new Date().toLocaleString()}`
            );
            await sendTextToUser(
              api,
              zalo_id[plate],
              `c√≥ th·ªÉ xem th√¥ng tin th·ªùi gian l√°i xe b·∫±ng c√°ch nh·∫Øn tin "th√¥ng tin xe ${plate}"`
            );
          }
        }
      } catch (err) {
        // console.error(`L·ªói khi ki·ªÉm tra xe ${plate}:`, err.message);
      }
    }
  } catch (err) {
    console.error("‚ùå L·ªói:", err);
  } finally {
    // ‚úÖ lu√¥n ƒë√≥ng Firefox khi xong
    await driver.quit();
  }
}
check_time_binhanh();
